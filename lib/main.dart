import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart'; // Added for FirebaseAuth
import 'package:provider/provider.dart'; // Added for Provider state management

import 'package:jewellery_billing_app/firebase_options.dart'; // This file is generated by FlutterFire CLI
import 'package:jewellery_billing_app/providers/bill_provider.dart'; // Import your BillProvider
import 'package:jewellery_billing_app/screens/dashboard_screen.dart'; // Import your dashboard
import 'package:jewellery_billing_app/screens/login_screen.dart'; // Import your login screen

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MultiProvider( // Using MultiProvider to allow for more providers in the future
      providers: [
        ChangeNotifierProvider(create: (_) => BillProvider()),
        // Add other providers here if your app grows (e.g., AuthProvider, ProductProvider)
      ],
      child: MaterialApp(
        title: 'Jewellery Billing App',
        theme: ThemeData(
          primarySwatch: Colors.blue,
          visualDensity: VisualDensity.adaptivePlatformDensity,
        ),
        home: AuthCheckScreen(), // Your initial screen that checks auth state
      ),
    );
  }
}

class AuthCheckScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>( // Specify the type for clarity
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator()); // Use const for performance
        }
        if (snapshot.hasError) {
          return Center(child: Text('Error: ${snapshot.error}'));
        }
        if (snapshot.hasData) {
          return DashboardScreen(); // User is logged in
        }
        return LoginScreen(); // User is not logged in
      },
    );
  }
}